/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-09-03 04:17:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.bitcamp.board.BoardVO;
import com.bitcamp.board.BoardDAO;

public final class boardView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/board/../04_include/top.jspf", Long.valueOf(1630564924409L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.bitcamp.board.BoardVO");
    _jspx_imports_classes.add("com.bitcamp.board.BoardDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	// 글 번호
	int no = Integer.parseInt(request.getParameter("no"));
	// DB조회, 조회수
	BoardDAO dao = new BoardDAO();
	BoardVO vo = dao.oneRecordSelect(no, 1); // // 1: 글 내용 보기, 2: 글 수정 폼

	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("	#boardView>li{\r\n");
      out.write("		border-bottom: 1px solid #ddd;\r\n");
      out.write("		padding:5px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("	function delChk(){\r\n");
      out.write("		// 삭제여부 확인 -> 확인:true, 취소:false\r\n");
      out.write("		if(confirm(\"삭제하시겠습니까?\")){\r\n");
      out.write("			location.href=\"");
      out.print(request.getContextPath());
      out.write("/board/boardDel.jsp?no=");
      out.print(no);
      out.write("\";\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!-- jspf파일은 웹에서 실행이 안 됨 -->\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	*{\r\n");
      out.write("		box-sizing:border-box;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	ul, li{\r\n");
      out.write("		margin:0;\r\n");
      out.write("		padding:0;\r\n");
      out.write("		list-style:none;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#menu > li{\r\n");
      out.write("		float:left;\r\n");
      out.write("		width:200px;\r\n");
      out.write("		height:50px;\r\n");
      out.write("		line-height:50px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.container{\r\n");
      out.write("		width:1000px;\r\n");
      out.write("		margin:0 auto;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div style=\"height:100px; background-color:lightblue\">\r\n");
      out.write("	\r\n");
      out.write("	");

		int num = 1234;
		String username = "이순신";
	
      out.write("\r\n");
      out.write("	<!--=num --> <!--=username -->\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<ul id=\"menu\">\r\n");
      out.write("		<li><a href=\"/webJSP/index.jsp\">홈</a></li>\r\n");
      out.write("		<li><a href=\"/webJSP/board/boardList.jsp\">게시판</a></li>\r\n");
      out.write("		<li>\r\n");
      out.write("		");

			// logId, logName
			if(session.getAttribute("logId")!=null && !session.getAttribute("logId").equals("")){ // 로그인 상태
				
      out.write("\r\n");
      out.write("				");
      out.print(session.getAttribute("logName"));
      out.write("님, <a href=\"");
      out.print(request.getContextPath());
      out.write("/daum_login/logout.jsp\">로그아웃</a>\r\n");
      out.write("				");

			} else{ // 로그인 안 한 상태
				
      out.write("\r\n");
      out.write("				<a href=\"");
      out.print(request.getContextPath());
      out.write("/daum_login/login1.html\">로그인</a>\r\n");
      out.write("				");

			}
		
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<h1>글 내용 보기</h1>\r\n");
      out.write("		<ul id=\"boardView\">\r\n");
      out.write("			<li>번호 : ");
      out.print(vo.getNo() );
      out.write("</li>\r\n");
      out.write("			<li>작성자 : ");
      out.print(vo.getUserid() );
      out.write("</li>\r\n");
      out.write("			<li>등록일 : ");
      out.print(vo.getWritedate() );
      out.write(", 조회수 : ");
      out.print(vo.getHit() );
      out.write("</li>\r\n");
      out.write("			<li>제목 : ");
      out.print(vo.getSubject() );
      out.write("</li>\r\n");
      out.write("			<li>");
      out.print(vo.getContent() );
      out.write("</li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		<div>\r\n");
      out.write("			");
 if(session.getAttribute("logId")!=null && !session.getAttribute("logId").equals("")) {
      out.write("\r\n");
      out.write("				<a href=\"");
      out.print(request.getContextPath());
      out.write("/board/boardEdit.jsp?no=");
      out.print(no);
      out.write("\">수정</a>\r\n");
      out.write("				<a href=\"javascript:delChk()\">삭제</a>\r\n");
      out.write("			");
 } 
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
