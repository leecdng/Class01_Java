
public class ArraySelectionSort {

	public static void main(String[] args) {
		// 1~100 사이의 난수를 10개 생성하여 배열에 대입 후 오름차순으로 정렬하여 출력
		// Selection Sort
		
		int[] arr = new int[10];
		
		// 1~100까지의 난수 10개 구해서 배열에 넣기
		for(int i=0; i<arr.length; i++) {
			arr[i] = (int)(Math.random()*100)+1;
		}
		System.out.println("== 정렬 전 데이터 ==");
		for(int i=0; i<arr.length; i++) {	// 난수 넣은 배열 10개값 출력
			System.out.print(arr[i]+", ");
		}
		
		
		// 선택 정렬하기
		for(int j=0; j<arr.length-1; j++) {
			// 최소값 구하기
			int min = arr[j];
			int temp = arr[j];
			int idx = j;
			for(int i=j; i<arr.length-1; i++) {	// i<arr.length로 하고 min > arr[i]로 해서 idx = i라고 해도 됨. 깔끔하지만, 자기 자신 값과도 비교를 해서 한 번 더 돌아감.
				if(min > arr[i+1]) {
					min = arr[i+1];
					idx = i+1;
				}
			}
			arr[j] = arr[idx];
			arr[idx] = temp;
		}
		System.out.println();
		System.out.println("== 정렬 후 데이터 ==");
		for(int i=0; i<arr.length; i++) {
			System.out.print(arr[i]+", ");
		}
	}

}
