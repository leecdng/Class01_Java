
public class MethodTest2 {
	// 전원
	boolean power = false; // true:켜짐, false:꺼짐
	// 채널
	// 	상수화 : 한 번 대입되면 변할 수 없게 만듦
	// 데이터형 왼쪽에 final 키워드를 붙임
	// 상수화된 변수는 모든 변수명을 대문자로 표시한다.
	final int CHANNEL_MIN = 1;
	final int CHANNEL_MAX = 20;
	int channelNow = 11;
	
	public MethodTest2() {
		
	}
	// 메서드 생성 규칙
	//반환형 메서드명(매개변수, 매개변수, ...){
	//	실행문; // 기능구현
	//}
	// 메서드명: 소문자로 시작, 합성어의 경우 두 번째 단어부터 대문자로 시작, ()가 있다.
	
	// power버튼을 누른 경우
	void powerStart() {
		power = !power;	// if문으로 안 써도 표현 가능
		/*
		if(power) {	// power = false니까 else가 실행
			power = false;
		} else {
			power = true;
		}
		*/
		System.out.println("power="+power);
	}
	// 단을 입력하면 구구단을 구하여 반환하는 메서드를 생성
	String gugudan(int dan){
		// 반환형: 실행문 1개만 내보낸다.
		String result ="";
		for(int i=2; i<10; i++) {
			result += dan+"*"+i+"="+dan*i+"\n";	// +=해야 2~9곱하기까지 나옴, =만하면 9곱한 것만 나옴
		}
		
		return result;
	}
	// 채널 번호 올리기
	void channelUp() {
		if(channelNow == CHANNEL_MAX) {
			channelNow = CHANNEL_MIN;
		} else {
			channelNow++;
		}
		channelPrint(); // 현재 클래스의 다른 메소드 호출
	}
	// 채널 번호 내리기
	void channelDown() {
		if(channelNow == CHANNEL_MIN) {
			channelNow = CHANNEL_MAX;
		} else {
			channelNow--;
		}
		channelPrint(); // 현재 클래스 내의 다른 메소드 호출
	}
	// 채널번호 출력하는 메소드
	void channelPrint() {
		System.out.println("채널번호: "+channelNow);
	}
	// static 키워드
	void sum(int max) {
		int tot=0;
		for(int i=1; i<=max; i++) {
			tot+=i;
		}
		System.out.println("1~"+max+"의 합은"+tot);
	}
}
